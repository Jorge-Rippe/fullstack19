/*
CONSULTAS DE SQL - JOIN

*/

SELECT E.ID_CURSO, C.ID, E.NOMBRE, C.NOMBRE
FROM ESTUDIANTE AS E,
     CURSO AS C
WHERE E.ID_CURSO = C.ID;

/* INNER JOIN CUALES CURSOS TIENEN ESTUDIANTES */

SELECT E.ID_CURSO, C.ID, E.NOMBRE, C.NOMBRE
FROM CURSO AS C
INNER JOIN ESTUDIANTE AS E 
ON E.ID_CURSO = C.ID;

/* LEFT JOIN - CUALES SON LOS CURSOS DISPONIBLES INCLUYENDO LOS QUE TIENEN ESTUDIANTES MATRICULADOS */

SELECT C.NOMBRE AS NOMBRE_CURSO, E.NOMBRE AS NOMBRE_ESTUDIANTE
FROM CURSO AS C
LEFT JOIN ESTUDIANTE AS E 
ON E.ID_CURSO = C.ID
WHERE E.ID IS NULL;

/*RIGHT JOIN ESTUDIANTES CON CURSOS ASIGNADOS */

SELECT C.NOMBRE AS NOMBRE_CURSO, E.NOMBRE AS NOMBRE_ESTUDIANTE
FROM CURSO AS C
RIGHT JOIN ESTUDIANTE AS E 
ON E.ID_CURSO = C.ID

/*RIGHT JOIN ESTUDIANTES SIN CURSOS ASIGNADOS */

SELECT C.NOMBRE AS NOMBRE_CURSO, E.NOMBRE AS NOMBRE_ESTUDIANTE
FROM CURSO AS C
RIGHT JOIN ESTUDIANTE AS E 
ON E.ID_CURSO = C.ID
WHERE E.ID IS NULL;


SELECT *
FROM ESTUDIANTE
WHERE ID != (SELECT MAX(ID) FROM ESTUDIANTE);

/* FULL OUTER JOIN REVISAR TODOS LOS ESTUDIANTES Y LOS CURSOS, INCLUYENDO LOS CURSOS SIN ESTUDIANTES Y LOS ESTUDIANTES SIN CURSO*/

SELECT C.NOMBRE AS NOMBRE_CURSO, E.NOMBRE AS NOMBRE_ESTUDIANTE
FROM CURSO AS C
FULL OUTER JOIN ESTUDIANTE AS E 
ON E.ID_CURSO = C.ID

/*FULL OUTER JOIN - REVISAR CURSOS SIN ESTUDIANTE Y ESTUDIANTE SIN CURSO*/

SELECT C.NOMBRE AS NOMBRE_CURSO, E.NOMBRE AS NOMBRE_ESTUDIANTE
FROM CURSO AS C
FULL OUTER JOIN ESTUDIANTE AS E 
ON E.ID_CURSO = C.ID
WHERE E.ID IS NULL OR
C.ID IS NULL;

/*OR Y AND*/

SELECT *
FROM ESTUDIANTE AS E
WHERE E.EDAD > 18 AND
      E.EDAD < 40 AND
      E.ID_CURSO = 1;

/*ESTUDIANTES CON EDADES ENTRE 20 Y 30*/

SELECT * FROM ESTUDIANTE WHERE EDAD IN (20,30);
"mongodb+srv://joarrima:<sv80766877>@cluster0.xmouos4.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"